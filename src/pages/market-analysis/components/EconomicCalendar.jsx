import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';
import Select from '../../../components/ui/Select';

const EconomicCalendar = () => {
  const [selectedPeriod, setSelectedPeriod] = useState('today');
  const [selectedImportance, setSelectedImportance] = useState('all');

  const periods = [
    { value: 'today', label: '–°–µ–≥–æ–¥–Ω—è' },
    { value: 'tomorrow', label: '–ó–∞–≤—Ç—Ä–∞' },
    { value: 'week', label: '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è' },
    { value: 'month', label: '–≠—Ç–æ—Ç –º–µ—Å—è—Ü' }
  ];

  const importanceLevels = [
    { value: 'all', label: '–í—Å–µ —Å–æ–±—ã—Ç–∏—è' },
    { value: 'high', label: '–í—ã—Å–æ–∫–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å' },
    { value: 'medium', label: '–°—Ä–µ–¥–Ω—è—è –≤–∞–∂–Ω–æ—Å—Ç—å' },
    { value: 'low', label: '–ù–∏–∑–∫–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å' }
  ];

  const economicEvents = [
    {
      time: '10:30',
      country: 'RU',
      event: '–ö–ª—é—á–µ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¶–ë –†–§',
      importance: 'high',
      forecast: '16.00%',
      previous: '16.00%',
      actual: null,
      impact: 'RUB',
      description: '–†–µ—à–µ–Ω–∏–µ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∞ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–µ'
    },
    {
      time: '12:00',
      country: 'RU',
      event: '–ò–Ω–¥–µ–∫—Å PMI –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ',
      importance: 'medium',
      forecast: '51.2',
      previous: '50.8',
      actual: '51.5',
      impact: 'RUB',
      description: '–ò–Ω–¥–µ–∫—Å –¥–µ–ª–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–µ–∫—Ç–æ—Ä–µ'
    },
    {
      time: '14:30',
      country: 'US',
      event: '–î–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ (NFP)',
      importance: 'high',
      forecast: '180K',
      previous: '175K',
      actual: null,
      impact: 'USD',
      description: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç –≤ –Ω–µ—Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–µ–∫—Ç–æ—Ä–µ'
    },
    {
      time: '16:00',
      country: 'EU',
      event: '–†–µ—à–µ–Ω–∏–µ –ï–¶–ë –ø–æ —Å—Ç–∞–≤–∫–∞–º',
      importance: 'high',
      forecast: '4.50%',
      previous: '4.50%',
      actual: null,
      impact: 'EUR',
      description: '–†–µ—à–µ–Ω–∏–µ –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∞ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º —Å—Ç–∞–≤–∫–∞–º'
    },
    {
      time: '18:00',
      country: 'RU',
      event: '–î–∞–Ω–Ω—ã–µ –ø–æ –∏–Ω—Ñ–ª—è—Ü–∏–∏',
      importance: 'medium',
      forecast: '7.2%',
      previous: '7.4%',
      actual: null,
      impact: 'RUB',
      description: '–ì–æ–¥–æ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∏–Ω—Ñ–ª—è—Ü–∏–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–µ–Ω'
    }
  ];

  const getImportanceColor = (importance) => {
    switch (importance) {
      case 'high':
        return 'text-error';
      case 'medium':
        return 'text-warning';
      case 'low':
        return 'text-success';
      default:
        return 'text-muted-foreground';
    }
  };

  const getImportanceIcon = (importance) => {
    switch (importance) {
      case 'high':
        return 'AlertTriangle';
      case 'medium':
        return 'AlertCircle';
      case 'low':
        return 'Info';
      default:
        return 'Circle';
    }
  };

  const getCountryFlag = (country) => {
    const flags = {
      'RU': 'üá∑üá∫',
      'US': 'üá∫üá∏',
      'EU': 'üá™üá∫',
      'CN': 'üá®üá≥',
      'JP': 'üáØüáµ'
    };
    return flags?.[country] || 'üåç';
  };

  const filteredEvents = economicEvents?.filter(event => {
    if (selectedImportance === 'all') return true;
    return event?.importance === selectedImportance;
  });

  return (
    <div className="bg-card border border-border rounded-lg p-4">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center space-x-2">
          <Icon name="Calendar" size={20} className="text-primary" />
          <h3 className="text-lg font-semibold text-foreground">–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h3>
        </div>
        <div className="flex items-center space-x-2">
          <Select
            options={periods}
            value={selectedPeriod}
            onChange={setSelectedPeriod}
            className="w-32"
          />
          <Select
            options={importanceLevels}
            value={selectedImportance}
            onChange={setSelectedImportance}
            className="w-36"
          />
          <Button
            variant="ghost"
            size="sm"
            onClick={() => console.log('Refresh calendar')}
            className="text-muted-foreground hover:text-foreground"
          >
            <Icon name="RefreshCw" size={16} />
          </Button>
        </div>
      </div>
      {/* Current Date */}
      <div className="bg-muted/20 rounded-md p-3 mb-4">
        <div className="flex items-center justify-between">
          <div>
            <div className="text-sm font-medium text-foreground">
              {new Date()?.toLocaleDateString('ru-RU', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </div>
            <div className="text-xs text-muted-foreground">
              –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è (UTC+3)
            </div>
          </div>
          <div className="text-right">
            <div className="text-sm font-medium text-foreground">{filteredEvents?.length} —Å–æ–±—ã—Ç–∏–π</div>
            <div className="text-xs text-muted-foreground">–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</div>
          </div>
        </div>
      </div>
      {/* Events List */}
      <div className="space-y-2">
        {filteredEvents?.map((event, index) => (
          <div 
            key={index} 
            className="bg-muted/10 rounded-md p-3 hover:bg-muted/20 transition-colors duration-150 cursor-pointer"
            onClick={() => console.log(`Selected event: ${event?.event}`)}
          >
            <div className="flex items-start justify-between mb-2">
              <div className="flex items-center space-x-3">
                <div className="text-sm font-mono text-foreground min-w-0">
                  {event?.time}
                </div>
                <div className="text-lg">{getCountryFlag(event?.country)}</div>
                <div className="flex-1">
                  <div className="text-sm font-medium text-foreground">{event?.event}</div>
                  <div className="text-xs text-muted-foreground">{event?.description}</div>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <Icon 
                  name={getImportanceIcon(event?.importance)} 
                  size={16} 
                  className={getImportanceColor(event?.importance)}
                />
                <div className={`px-2 py-1 rounded text-xs font-medium ${
                  event?.impact === 'RUB' ? 'bg-primary/20 text-primary' :
                  event?.impact === 'USD'? 'bg-success/20 text-success' : 'bg-warning/20 text-warning'
                }`}>
                  {event?.impact}
                </div>
              </div>
            </div>
            
            <div className="grid grid-cols-3 gap-4 text-xs">
              <div>
                <div className="text-muted-foreground">–ü—Ä–æ–≥–Ω–æ–∑</div>
                <div className="font-mono text-foreground">{event?.forecast}</div>
              </div>
              <div>
                <div className="text-muted-foreground">–ü—Ä–µ–¥—ã–¥—É—â–∏–π</div>
                <div className="font-mono text-foreground">{event?.previous}</div>
              </div>
              <div>
                <div className="text-muted-foreground">–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π</div>
                <div className={`font-mono ${
                  event?.actual ? 
                    (parseFloat(event?.actual) > parseFloat(event?.forecast) ? 'text-success' : 'text-error') :
                    'text-muted-foreground'
                }`}>
                  {event?.actual || '–û–∂–∏–¥–∞–µ—Ç—Å—è'}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      {/* Market Impact Summary */}
      <div className="mt-4 pt-3 border-t border-border">
        <div className="flex items-center justify-between mb-2">
          <span className="text-sm font-medium text-foreground">–í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–Ω–æ–∫</span>
          <Button
            variant="ghost"
            size="sm"
            onClick={() => console.log('View market impact analysis')}
            className="text-xs text-muted-foreground hover:text-foreground"
          >
            –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑
          </Button>
        </div>
        
        <div className="grid grid-cols-3 gap-4 text-center">
          <div>
            <div className="text-sm font-semibold text-error">3</div>
            <div className="text-xs text-muted-foreground">–í—ã—Å–æ–∫–æ–µ –≤–ª–∏—è–Ω–∏–µ</div>
          </div>
          <div>
            <div className="text-sm font-semibold text-warning">2</div>
            <div className="text-xs text-muted-foreground">–°—Ä–µ–¥–Ω–µ–µ –≤–ª–∏—è–Ω–∏–µ</div>
          </div>
          <div>
            <div className="text-sm font-semibold text-success">0</div>
            <div className="text-xs text-muted-foreground">–ù–∏–∑–∫–æ–µ –≤–ª–∏—è–Ω–∏–µ</div>
          </div>
        </div>
      </div>
      {/* Quick Actions */}
      <div className="mt-4 flex items-center space-x-2">
        <Button
          variant="outline"
          size="sm"
          onClick={() => console.log('Set alert')}
          className="flex-1 text-xs"
        >
          <Icon name="Bell" size={14} className="mr-1" />
          –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        </Button>
        <Button
          variant="outline"
          size="sm"
          onClick={() => console.log('Export calendar')}
          className="flex-1 text-xs"
        >
          <Icon name="Download" size={14} className="mr-1" />
          –≠–∫—Å–ø–æ—Ä—Ç
        </Button>
      </div>
    </div>
  );
};

export default EconomicCalendar;